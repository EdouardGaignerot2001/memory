name: Test Memory Workflow

# Déclencheur du workflow
on:
  push:
    branches:
      - develop

# Jobs à exécuter dans le workflow
jobs:
  test-memory:
    # Type de runner (self-hosted)
    runs-on: note

    steps:
      # Étape 1 : Vérifier le code source
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape 2 : Vérifier les fichiers JPEG
      - name: Test JPEG files
        shell: bash
        run: |
          # Parcours de tous les fichiers .jpg dans le dépôt
          for file in $(find . -name "*.jpg"); do
            # Utilisation de la commande 'file' pour vérifier chaque fichier
            if ! file "$file" | grep -q "JPEG image data"; then
              echo "Le fichier $file est corrompu. Remplacement requis."
              # Remplacer par un fichier JPEG
              cp ./image/Unknown.jpeg "$file"
              echo "$file remplacé par Unknown.jpeg."
            else
              echo "$file est un fichier JPEG valide."
            fi
          done

  build-memory:
    runs-on: note
    needs: test-memory  # Dépend du job test-memory
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t <edouardgaignerot>/memory .
  push-memory:
    runs-on: note
    needs: build-memory
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker push <edouardgaignerot>/memory
  deploy-memory:
    runs-on: note
    needs: push-memory
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server (use docker compose)
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          
          echo "$SSH_KEY" > private_key
          chmod 600 private_key

          
           # SSH into the server
          ssh -i private_key -o StrictHostKeyChecking=no $USERNAME@$HOST << 'EOF'
            cd memory  #chemin du docker-compose.yml
            docker-compose pull
            docker-compose up -d
          EOF